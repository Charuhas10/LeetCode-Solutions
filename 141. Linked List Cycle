/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head) return 0;
        ListNode* slow=head,*fast=head;
        do{
            slow=slow->next;
            if(fast->next)
                fast=fast->next->next;
        }while(fast&&fast->next!=NULL&&slow!=fast);
        return fast==slow;
    }
};
